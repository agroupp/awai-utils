var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/Arr.html",[0,0.333,1,0.736]],["body/classes/Arr.html",[0,0.238,1,1.233,2,0.653,3,0.805,4,0.653,5,0.653,6,1.252,7,0.805,8,0.526,9,1.159,10,2.1,11,2.438,12,2.46,13,1.861,14,3.222,15,2.756,16,2.438,17,2.438,18,2.222,19,1.773,20,1.64,21,2.91,22,2.71,23,1.958,24,2.438,25,1.861,26,1.861,27,1.861,28,1.886,29,0.084,30,1.773,31,1.233,32,1.773,33,1.773,34,2.438,35,1.64,36,3.609,37,2.037,38,3.222,39,2.193,40,3.049,41,2.438,42,1.64,43,1.861,44,1.861,45,1.198,46,2.438,47,1.64,48,2.438,49,2.093,50,3.222,51,1.64,52,2.438,53,2.438,54,0.653,55,0.653,56,1.861,57,1.692,58,1.64,59,1.958,60,1.64,61,1.64,62,1.159,63,0.805,64,0.805,65,0.653,66,0.653,67,0.805,68,1.64,69,0.805,70,1.692,71,1.692,72,1.861,73,1.64,74,2.438,75,1.64,76,1.64,77,0.805,78,1.198,79,0.066,80,1.861,81,1.64,82,1.252,83,1.64,84,1.861,85,1.64,86,0.044,87,0.03]],["title/classes/RandomBytesProvider.html",[0,0.333,88,1.127]],["body/classes/RandomBytesProvider.html",[0,0.456,1,0.861,2,0.745,3,0.918,4,0.745,5,0.745,7,0.918,8,0.6,9,1.25,10,1.857,18,2.396,19,1.318,22,2.207,23,2.501,28,1.318,29,0.085,30,1.318,31,0.861,32,1.318,33,1.318,37,1.957,45,0.918,49,2.421,54,1.069,55,1.25,56,2.618,63,0.918,64,1.542,65,0.745,69,0.918,70,1.318,71,1.318,77,1.685,78,1.685,79,0.034,86,0.049,87,0.034,88,1.318,89,1.136,90,2.683,91,2.683,92,2.683,93,1.87,94,2.886,95,2.618,96,2.683,97,1.87,98,2.618,99,2.683,100,2.396,101,3.139,102,1.907,103,1.427,104,1.427,105,2.049,106,2.049,107,2.049,108,1.907,109,1.87,110,1.87,111,1.87,112,1.87,113,1.87,114,0.918,115,1.427,116,1.87,117,1.87,118,1.87,119,3.43,120,3.43,121,3.139,122,3.43,123,1.87,124,1.87,125,1.87,126,2.207,127,2.683,128,2.683,129,1.87,130,1.87,131,3.139,132,2.683,133,1.87,134,1.87,135,1.87,136,1.87,137,1.87,138,2.049,139,1.87,140,1.87,141,1.87,142,1.87,143,1.87]],["title/classes/Rnd.html",[0,0.333,114,1.127]],["body/classes/Rnd.html",[0,0.209,1,0.71,2,0.574,3,0.708,4,0.574,5,0.574,7,0.708,8,0.462,9,1.072,10,1.931,15,2.623,19,1.482,23,1.343,25,2.623,26,2.304,27,2.304,28,1.757,29,0.084,30,1.482,31,0.969,32,1.482,33,1.482,37,2.07,39,1.635,49,2.74,54,1.202,55,1.202,57,1.813,63,1.086,64,1.599,65,0.574,66,0.574,67,0.708,69,0.708,70,1.599,71,1.322,77,1.931,78,1.482,79,0.049,86,0.04,87,0.067,88,0.708,94,3.116,95,1.1,98,2.054,114,1.086,138,1.1,144,1.1,145,2.211,146,3.691,147,2.211,148,2.211,149,2.211,150,2.211,151,1.441,152,3.017,153,3.017,154,3.577,155,3.577,156,3.017,157,4.081,158,2.211,159,1.441,160,2.211,161,3.93,162,1.441,163,3.435,164,3.863,165,2.69,166,3.435,167,3.435,168,3.435,169,2.69,170,2.69,171,2.69,172,1.441,173,1.441,174,1.441,175,1.441,176,1.441,177,1.441,178,2.211,179,2.211,180,2.211,181,2.211,182,1.441,183,3.435,184,1.441,185,2.211,186,1.441]],["title/classes/Str.html",[0,0.333,62,0.914]],["body/classes/Str.html",[0,0.124,1,0.463,2,0.749,3,0.418,4,1.073,5,0.339,7,0.923,8,0.273,9,0.749,10,2.057,12,1.102,13,1.102,19,1.726,22,0.517,28,1.648,29,0.084,30,1.788,31,1.076,32,1.726,33,1.726,37,2.07,39,1.637,40,2.306,43,2.733,44,2.403,45,1.758,54,0.339,55,0.339,57,1.088,59,2.721,62,1.642,63,0.418,64,0.923,65,0.339,66,0.749,67,0.418,69,0.709,70,1.648,71,1.689,72,1.102,77,1.088,78,1.758,79,0.055,80,0.65,82,0.65,86,0.026,87,0.015,126,0.517,187,0.517,188,1.444,189,1.444,190,1.444,191,1.444,192,1.444,193,1.444,194,1.444,195,1.444,196,1.444,197,1.444,198,1.444,199,1.88,200,1.444,201,0.851,202,1.691,203,1.444,204,1.444,205,1.444,206,1.444,207,1.444,208,0.851,209,1.444,210,2.192,211,1.444,212,1.444,213,0.851,214,1.444,215,1.893,216,1.444,217,0.851,218,1.435,219,1.444,220,0.851,221,3.258,222,2.694,223,1.444,224,0.851,225,2.214,226,2.214,227,2.214,228,1.444,229,0.851,230,1.444,231,0.851,232,0.851,233,0.851,234,0.851,235,0.851,236,0.851,237,0.851,238,1.444,239,0.851,240,1.444,241,1.88,242,1.444,243,1.444,244,1.444,245,2.694,246,2.214,247,2.214,248,0.851,249,2.403,250,2.214,251,2.694,252,2.871,253,1.444,254,1.444,255,1.444,256,3.021,257,3.258,258,3.021,259,2.214,260,2.214,261,2.214,262,1.444,263,1.444,264,1.444,265,1.444,266,0.851,267,0.851,268,0.851,269,0.851,270,0.65,271,0.65,272,1.435,273,0.65,274,0.65,275,0.65,276,0.65,277,0.65,278,0.65,279,0.851,280,0.517,281,0.65,282,2.306,283,2.487,284,1.102,285,1.102,286,1.893,287,1.102,288,0.65,289,0.65,290,0.65,291,0.65,292,0.851,293,0.851,294,0.851,295,0.517,296,0.65,297,1.102,298,1.102,299,1.102,300,1.102,301,0.65,302,0.517,303,0.65,304,0.65,305,0.517,306,0.65,307,0.65,308,1.102,309,1.102,310,0.65,311,0.877,312,0.65,313,0.65,314,0.851,315,0.851,316,1.444,317,0.851,318,2.871,319,0.851,320,0.851,321,1.444,322,0.851,323,0.851,324,0.851,325,1.444,326,0.851,327,0.851,328,0.851,329,0.851,330,0.851,331,0.851,332,0.851,333,0.851,334,1.88,335,0.851,336,0.851,337,0.851,338,0.851,339,0.851,340,0.851,341,0.851,342,0.851,343,0.851,344,1.444,345,0.851,346,0.851,347,0.851,348,2.694,349,0.851,350,0.851,351,0.851,352,1.444,353,0.851,354,0.851,355,0.851,356,0.851]],["title/coverage.html",[357,2.362]],["body/coverage.html",[0,0.593,1,0.921,5,1.142,6,2.19,29,0.082,31,0.921,57,2.005,62,1.142,79,0.052,86,0.065,87,0.052,88,1.409,89,2.369,102,1.743,108,1.743,114,1.409,126,1.743,144,2.19,187,2.602,280,1.743,295,1.743,302,1.743,305,1.743,311,1.743,357,2.19,358,2.19,359,2.868,360,2.868,361,2.868,362,2.868,363,2.868,364,2.868,365,4.344,366,4.081,367,2.868,368,2.868,369,2.868,370,2.868,371,3.898,372,3.898,373,2.868,374,2.868]],["title/dependencies.html",[375,1.933,376,2.098]],["body/dependencies.html",[29,0.079,79,0.064,86,0.073,87,0.064,376,2.672,377,3.5,378,3.5,379,3.5,380,3.5]],["title/index.html",[8,0.621,381,1.476,382,1.476]],["body/index.html",[9,1.377,29,0.073,62,1.377,65,1.377,66,1.594,67,1.698,79,0.063,86,0.073,87,0.063,249,2.638,313,2.638,383,3.456,384,3.456,385,3.456]],["title/license.html",[381,1.476,382,1.476,386,1.476]],["body/license.html",[29,0.063,79,0.05,84,2.09,86,0.063,87,0.05,115,2.652,202,2.652,358,2.09,386,2.09,387,2.737,388,3.815,389,2.737,390,2.737,391,2.737,392,3.473,393,2.737,394,2.737,395,2.737,396,2.737,397,2.737,398,2.737,399,4.392,400,2.737,401,2.737,402,2.737,403,3.815,404,2.737,405,3.473,406,2.737,407,2.737,408,2.737,409,2.737,410,2.737,411,2.737,412,2.737,413,2.737,414,2.737,415,3.473,416,2.737,417,2.737,418,2.737,419,2.737,420,2.737,421,2.737,422,2.737,423,3.473,424,3.473,425,2.737,426,2.737,427,2.737,428,2.737,429,2.737,430,2.737,431,2.737,432,2.737,433,2.737,434,2.737,435,2.737,436,2.737,437,2.737,438,2.737,439,2.737,440,2.737,441,2.737,442,2.737,443,2.737,444,2.737,445,2.737,446,2.737,447,2.737,448,2.737,449,2.737,450,2.737,451,2.737,452,2.737,453,2.737,454,2.737,455,2.737]],["title/modules.html",[456,2.362]],["body/modules.html",[29,0.074,79,0.065,86,0.074,87,0.065,456,2.725]],["title/overview.html",[457,2.362]],["body/overview.html",[2,1.413,29,0.074,79,0.064,86,0.074,87,0.064,457,2.708,458,3.546]],["title/miscellaneous/variables.html",[459,1.476,460,2.098]],["body/miscellaneous/variables.html",[4,1.281,8,0.78,29,0.083,31,1.032,45,1.193,54,1.665,55,1.665,59,2.189,66,0.968,79,0.044,86,0.058,87,0.044,89,1.476,100,2.454,102,1.953,103,1.855,104,1.855,105,2.454,106,2.454,107,2.454,108,1.953,187,1.476,210,1.855,215,1.855,218,1.855,270,1.855,271,1.855,272,1.855,273,1.855,274,1.855,275,1.855,276,1.855,277,1.855,278,1.855,280,1.953,281,1.855,282,3.24,283,3.311,284,2.454,285,2.454,286,3.045,287,2.454,288,1.855,289,1.855,290,1.855,291,1.855,295,1.953,296,1.855,297,2.454,298,2.454,299,2.454,300,2.454,301,1.855,302,1.953,303,1.855,304,1.855,305,1.953,306,1.855,307,1.855,308,1.855,309,1.855,310,1.855,311,1.953,312,1.855,459,1.855,460,1.855,461,3.988,462,3.215,463,2.429]],["title/routes.html",[464,2.362]],["body/routes.html",[29,0.074,79,0.065,86,0.074,87,0.065,464,2.725]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":57,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{}}}],["0,61}[a",{"_index":287,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":26,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{}}}],["0/1",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":77,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["1,254}$)(?=.{1,64}@)[a",{"_index":281,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":27,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{}}}],["1.10.0",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":168,"title":{},"body":{"classes/Rnd.html":{}}}],["100",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":325,"title":{},"body":{"classes/Str.html":{}}}],["2/3",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":389,"title":{},"body":{"license.html":{}}}],["256",{"_index":179,"title":{},"body":{"classes/Rnd.html":{}}}],["25[0",{"_index":296,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":346,"title":{},"body":{"classes/Str.html":{}}}],["3.5.9",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":458,"title":{},"body":{"overview.html":{}}}],["4/5",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["4][0",{"_index":298,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["5]|2[0",{"_index":297,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["6/7",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":286,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["9!#$%&'*+/=?^_",{"_index":284,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["91",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["9](?:[a",{"_index":285,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["9])?(?:\\.[a",{"_index":288,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["9]+)*\\.)+[a",{"_index":303,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["9]?)\\.){3}(?:25[0",{"_index":301,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["9][0",{"_index":300,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["9]|[01]?[0",{"_index":299,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":312,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":422,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":198,"title":{},"body":{"classes/Str.html":{}}}],["accurate",{"_index":289,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":448,"title":{},"body":{"license.html":{}}}],["address",{"_index":215,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":275,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["alphbet",{"_index":310,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":413,"title":{},"body":{"license.html":{}}}],["angular",{"_index":278,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":452,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1,"title":{"classes/Arr.html":{}},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{}}}],["arr.bytestofloat(bytes",{"_index":180,"title":{},"body":{"classes/Rnd.html":{}}}],["arr.isnullorempty(arr",{"_index":74,"title":{},"body":{"classes/Arr.html":{}}}],["arr.length",{"_index":73,"title":{},"body":{"classes/Arr.html":{}}}],["arr[0",{"_index":75,"title":{},"body":{"classes/Arr.html":{}}}],["arr[arr.length",{"_index":76,"title":{},"body":{"classes/Arr.html":{}}}],["array",{"_index":22,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Str.html":{}}}],["arrays",{"_index":68,"title":{},"body":{"classes/Arr.html":{}}}],["arthur",{"_index":390,"title":{},"body":{"license.html":{}}}],["associated",{"_index":400,"title":{},"body":{"license.html":{}}}],["async",{"_index":146,"title":{},"body":{"classes/Rnd.html":{}}}],["authors",{"_index":441,"title":{},"body":{"license.html":{}}}],["awai",{"_index":383,"title":{},"body":{"index.html":{}}}],["await",{"_index":181,"title":{},"body":{"classes/Rnd.html":{}}}],["bold",{"_index":264,"title":{},"body":{"classes/Str.html":{}}}],["boolean",{"_index":45,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":166,"title":{},"body":{"classes/Rnd.html":{}}}],["boundaries",{"_index":237,"title":{},"body":{"classes/Str.html":{}}}],["breaking",{"_index":235,"title":{},"body":{"classes/Str.html":{}}}],["buf",{"_index":134,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["bytes",{"_index":23,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{}}}],["bytes[0",{"_index":178,"title":{},"body":{"classes/Rnd.html":{}}}],["bytestofloat",{"_index":11,"title":{},"body":{"classes/Arr.html":{}}}],["bytestofloat(bytes",{"_index":17,"title":{},"body":{"classes/Arr.html":{}}}],["c",{"_index":84,"title":{},"body":{"classes/Arr.html":{},"license.html":{}}}],["c.length",{"_index":85,"title":{},"body":{"classes/Arr.html":{}}}],["capitalize",{"_index":188,"title":{},"body":{"classes/Str.html":{}}}],["capitalize(str",{"_index":200,"title":{},"body":{"classes/Str.html":{}}}],["capitalized",{"_index":204,"title":{},"body":{"classes/Str.html":{}}}],["case",{"_index":260,"title":{},"body":{"classes/Str.html":{}}}],["catch",{"_index":130,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["character",{"_index":203,"title":{},"body":{"classes/Str.html":{}}}],["characters",{"_index":221,"title":{},"body":{"classes/Str.html":{}}}],["charge",{"_index":396,"title":{},"body":{"license.html":{}}}],["chars",{"_index":61,"title":{},"body":{"classes/Arr.html":{}}}],["check",{"_index":291,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":444,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"overview.html":{}}}],["code",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code](https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts",{"_index":279,"title":{},"body":{"classes/Str.html":{}}}],["collection",{"_index":118,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["conditions",{"_index":421,"title":{},"body":{"license.html":{}}}],["connection",{"_index":454,"title":{},"body":{"license.html":{}}}],["consists",{"_index":225,"title":{},"body":{"classes/Str.html":{}}}],["const",{"_index":78,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["contract",{"_index":449,"title":{},"body":{"license.html":{}}}],["convert",{"_index":21,"title":{},"body":{"classes/Arr.html":{}}}],["converted",{"_index":240,"title":{},"body":{"classes/Str.html":{}}}],["cookbook/9780596802837/ch07s16.html",{"_index":294,"title":{},"body":{"classes/Str.html":{}}}],["copies",{"_index":415,"title":{},"body":{"license.html":{}}}],["copy",{"_index":202,"title":{},"body":{"classes/Str.html":{},"license.html":{}}}],["copyright",{"_index":388,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":357,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crypto",{"_index":101,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["cryptographically",{"_index":174,"title":{},"body":{"classes/Rnd.html":{}}}],["css",{"_index":254,"title":{},"body":{"classes/Str.html":{}}}],["damages",{"_index":445,"title":{},"body":{"license.html":{}}}],["deal",{"_index":402,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":455,"title":{},"body":{"license.html":{}}}],["default",{"_index":54,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["dependencies",{"_index":376,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":64,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["directly",{"_index":116,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["distribute",{"_index":411,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":358,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["domain",{"_index":211,"title":{},"body":{"classes/Str.html":{}}}],["domain_name_regexp",{"_index":302,"title":{},"body":{"classes/Str.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["domain_name_regexp.test(str",{"_index":333,"title":{},"body":{"classes/Str.html":{}}}],["e",{"_index":273,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":38,"title":{},"body":{"classes/Arr.html":{}}}],["em",{"_index":263,"title":{},"body":{"classes/Str.html":{}}}],["email",{"_index":214,"title":{},"body":{"classes/Str.html":{}}}],["email_regexp",{"_index":280,"title":{},"body":{"classes/Str.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email_regexp.test(splitted.join",{"_index":331,"title":{},"body":{"classes/Str.html":{}}}],["empty",{"_index":44,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["english",{"_index":309,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["english_letters_lowercase",{"_index":311,"title":{},"body":{"classes/Str.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["englishlettersordered",{"_index":199,"title":{},"body":{"classes/Str.html":{}}}],["equal",{"_index":155,"title":{},"body":{"classes/Rnd.html":{}}}],["err",{"_index":131,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["error('no",{"_index":143,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["event",{"_index":440,"title":{},"body":{"license.html":{}}}],["example",{"_index":7,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["export",{"_index":69,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["express",{"_index":431,"title":{},"body":{"license.html":{}}}],["expression",{"_index":271,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["expressions",{"_index":293,"title":{},"body":{"classes/Str.html":{}}}],["false",{"_index":321,"title":{},"body":{"classes/Str.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{}}}],["files",{"_index":401,"title":{},"body":{"license.html":{}}}],["filled",{"_index":52,"title":{},"body":{"classes/Arr.html":{}}}],["first",{"_index":12,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["first(arr",{"_index":34,"title":{},"body":{"classes/Arr.html":{}}}],["fitness",{"_index":436,"title":{},"body":{"license.html":{}}}],["floating",{"_index":152,"title":{},"body":{"classes/Rnd.html":{}}}],["floats",{"_index":24,"title":{},"body":{"classes/Arr.html":{}}}],["floatvalue",{"_index":183,"title":{},"body":{"classes/Rnd.html":{}}}],["following",{"_index":420,"title":{},"body":{"license.html":{}}}],["for(const",{"_index":349,"title":{},"body":{"classes/Str.html":{}}}],["for(let",{"_index":80,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["free",{"_index":395,"title":{},"body":{"license.html":{}}}],["function",{"_index":107,"title":{},"body":{"classes/RandomBytesProvider.html":{},"miscellaneous/variables.html":{}}}],["furnished",{"_index":418,"title":{},"body":{"license.html":{}}}],["generate",{"_index":95,"title":{},"body":{"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{}}}],["generates",{"_index":170,"title":{},"body":{"classes/Rnd.html":{}}}],["getempty",{"_index":266,"title":{},"body":{"classes/Str.html":{}}}],["getenglishlettersordered",{"_index":268,"title":{},"body":{"classes/Str.html":{}}}],["getting",{"_index":381,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":394,"title":{},"body":{"license.html":{}}}],["greater",{"_index":154,"title":{},"body":{"classes/Rnd.html":{}}}],["groupp",{"_index":391,"title":{},"body":{"license.html":{}}}],["helper",{"_index":67,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"index.html":{}}}],["here",{"_index":261,"title":{},"body":{"classes/Str.html":{}}}],["hereby",{"_index":393,"title":{},"body":{"license.html":{}}}],["higher",{"_index":112,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["holders",{"_index":442,"title":{},"body":{"license.html":{}}}],["html",{"_index":251,"title":{},"body":{"classes/Str.html":{}}}],["identifier",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["ig",{"_index":342,"title":{},"body":{"classes/Str.html":{}}}],["implied",{"_index":432,"title":{},"body":{"license.html":{}}}],["import",{"_index":63,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["included",{"_index":425,"title":{},"body":{"license.html":{}}}],["including",{"_index":405,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["integer",{"_index":163,"title":{},"body":{"classes/Rnd.html":{}}}],["integers",{"_index":53,"title":{},"body":{"classes/Arr.html":{}}}],["ip",{"_index":218,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["ip_regexp",{"_index":295,"title":{},"body":{"classes/Str.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ip_regexp.test(str",{"_index":332,"title":{},"body":{"classes/Str.html":{}}}],["isbrowser",{"_index":102,"title":{},"body":{"classes/RandomBytesProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdomainname",{"_index":189,"title":{},"body":{"classes/Str.html":{}}}],["isdomainname(str",{"_index":207,"title":{},"body":{"classes/Str.html":{}}}],["isemail",{"_index":190,"title":{},"body":{"classes/Str.html":{}}}],["isemail(str",{"_index":212,"title":{},"body":{"classes/Str.html":{}}}],["isip",{"_index":191,"title":{},"body":{"classes/Str.html":{}}}],["isip(str",{"_index":216,"title":{},"body":{"classes/Str.html":{}}}],["islower",{"_index":192,"title":{},"body":{"classes/Str.html":{}}}],["islower(str",{"_index":219,"title":{},"body":{"classes/Str.html":{}}}],["isnodejs",{"_index":108,"title":{},"body":{"classes/RandomBytesProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnullorempty",{"_index":13,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["isnullorempty(arr",{"_index":41,"title":{},"body":{"classes/Arr.html":{}}}],["isnullorempty(str",{"_index":223,"title":{},"body":{"classes/Str.html":{}}}],["isnullorwhitespace",{"_index":193,"title":{},"body":{"classes/Str.html":{}}}],["isnullorwhitespace(str",{"_index":228,"title":{},"body":{"classes/Str.html":{}}}],["isupper",{"_index":194,"title":{},"body":{"classes/Str.html":{}}}],["isupper(str",{"_index":230,"title":{},"body":{"classes/Str.html":{}}}],["italic",{"_index":265,"title":{},"body":{"classes/Str.html":{}}}],["kind",{"_index":430,"title":{},"body":{"license.html":{}}}],["last",{"_index":14,"title":{},"body":{"classes/Arr.html":{}}}],["last(arr",{"_index":46,"title":{},"body":{"classes/Arr.html":{}}}],["less",{"_index":156,"title":{},"body":{"classes/Rnd.html":{}}}],["letters",{"_index":315,"title":{},"body":{"classes/Str.html":{}}}],["level",{"_index":113,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["liability",{"_index":446,"title":{},"body":{"license.html":{}}}],["liable",{"_index":443,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":384,"title":{},"body":{"index.html":{}}}],["libs/.../provider.ts",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../str.ts",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/toolbox/src/lib/arr/arr.ts",{"_index":6,"title":{},"body":{"classes/Arr.html":{},"coverage.html":{}}}],["libs/toolbox/src/lib/arr/arr.ts:20",{"_index":42,"title":{},"body":{"classes/Arr.html":{}}}],["libs/toolbox/src/lib/arr/arr.ts:28",{"_index":35,"title":{},"body":{"classes/Arr.html":{}}}],["libs/toolbox/src/lib/arr/arr.ts:36",{"_index":47,"title":{},"body":{"classes/Arr.html":{}}}],["libs/toolbox/src/lib/arr/arr.ts:44",{"_index":51,"title":{},"body":{"classes/Arr.html":{}}}],["libs/toolbox/src/lib/arr/arr.ts:56",{"_index":60,"title":{},"body":{"classes/Arr.html":{}}}],["libs/toolbox/src/lib/arr/arr.ts:69",{"_index":20,"title":{},"body":{"classes/Arr.html":{}}}],["libs/toolbox/src/lib/random/provider.ts",{"_index":89,"title":{},"body":{"classes/RandomBytesProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/toolbox/src/lib/random/provider.ts:27",{"_index":97,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["libs/toolbox/src/lib/random/provider.ts:58",{"_index":93,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["libs/toolbox/src/lib/random/rnd.ts",{"_index":144,"title":{},"body":{"classes/Rnd.html":{},"coverage.html":{}}}],["libs/toolbox/src/lib/random/rnd.ts:21",{"_index":151,"title":{},"body":{"classes/Rnd.html":{}}}],["libs/toolbox/src/lib/random/rnd.ts:30",{"_index":159,"title":{},"body":{"classes/Rnd.html":{}}}],["libs/toolbox/src/lib/random/rnd.ts:43",{"_index":162,"title":{},"body":{"classes/Rnd.html":{}}}],["libs/toolbox/src/lib/random/rnd.ts:65",{"_index":173,"title":{},"body":{"classes/Rnd.html":{}}}],["libs/toolbox/src/lib/str/str.ts",{"_index":187,"title":{},"body":{"classes/Str.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/toolbox/src/lib/str/str.ts:106",{"_index":217,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:114",{"_index":208,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:123",{"_index":201,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:131",{"_index":239,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:146",{"_index":233,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:172",{"_index":248,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:44",{"_index":267,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:50",{"_index":269,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:55",{"_index":224,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:62",{"_index":229,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:71",{"_index":231,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:79",{"_index":220,"title":{},"body":{"classes/Str.html":{}}}],["libs/toolbox/src/lib/str/str.ts:87",{"_index":213,"title":{},"body":{"classes/Str.html":{}}}],["license",{"_index":386,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":406,"title":{},"body":{"license.html":{}}}],["limited",{"_index":433,"title":{},"body":{"license.html":{}}}],["line",{"_index":236,"title":{},"body":{"classes/Str.html":{}}}],["lines",{"_index":234,"title":{},"body":{"classes/Str.html":{}}}],["list",{"_index":253,"title":{},"body":{"classes/Str.html":{}}}],["looks",{"_index":209,"title":{},"body":{"classes/Str.html":{}}}],["lower",{"_index":165,"title":{},"body":{"classes/Rnd.html":{}}}],["lowercase",{"_index":241,"title":{},"body":{"classes/Str.html":{}}}],["lowercased",{"_index":206,"title":{},"body":{"classes/Str.html":{}}}],["mail",{"_index":274,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["majority",{"_index":257,"title":{},"body":{"classes/Str.html":{}}}],["match",{"_index":350,"title":{},"body":{"classes/Str.html":{}}}],["match.index",{"_index":352,"title":{},"body":{"classes/Str.html":{}}}],["match.input.substr(0",{"_index":353,"title":{},"body":{"classes/Str.html":{}}}],["match.input.substr(match.index",{"_index":355,"title":{},"body":{"classes/Str.html":{}}}],["match[0].length",{"_index":356,"title":{},"body":{"classes/Str.html":{}}}],["matches",{"_index":272,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":86,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["math.round(floatvalue",{"_index":185,"title":{},"body":{"classes/Rnd.html":{}}}],["max",{"_index":161,"title":{},"body":{"classes/Rnd.html":{}}}],["merchantability",{"_index":435,"title":{},"body":{"license.html":{}}}],["merge",{"_index":409,"title":{},"body":{"license.html":{}}}],["methods",{"_index":9,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"index.html":{}}}],["min",{"_index":164,"title":{},"body":{"classes/Rnd.html":{}}}],["miscellaneous",{"_index":459,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":387,"title":{},"body":{"license.html":{}}}],["modify",{"_index":408,"title":{},"body":{"license.html":{}}}],["modules",{"_index":456,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mongodb",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":308,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["need",{"_index":117,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["new",{"_index":126,"title":{},"body":{"classes/RandomBytesProvider.html":{},"classes/Str.html":{},"coverage.html":{}}}],["new_line_boundaries",{"_index":305,"title":{},"body":{"classes/Str.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nextbytes",{"_index":90,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["nextbytes(size",{"_index":92,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["nextbytesasync",{"_index":91,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["nextbytesasync(size",{"_index":96,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["nextfloat",{"_index":145,"title":{},"body":{"classes/Rnd.html":{}}}],["nextfloat(qty",{"_index":150,"title":{},"body":{"classes/Rnd.html":{}}}],["nextfloatasync",{"_index":147,"title":{},"body":{"classes/Rnd.html":{}}}],["nextfloatasync(qty",{"_index":158,"title":{},"body":{"classes/Rnd.html":{}}}],["nextint",{"_index":148,"title":{},"body":{"classes/Rnd.html":{}}}],["nextint(min",{"_index":160,"title":{},"body":{"classes/Rnd.html":{}}}],["nextintasync",{"_index":149,"title":{},"body":{"classes/Rnd.html":{}}}],["nextintasync(min",{"_index":172,"title":{},"body":{"classes/Rnd.html":{}}}],["noninfringement",{"_index":439,"title":{},"body":{"license.html":{}}}],["notice",{"_index":423,"title":{},"body":{"license.html":{}}}],["null",{"_index":40,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["number",{"_index":49,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{}}}],["obtaining",{"_index":398,"title":{},"body":{"license.html":{}}}],["one",{"_index":171,"title":{},"body":{"classes/Rnd.html":{}}}],["opinion",{"_index":258,"title":{},"body":{"classes/Str.html":{}}}],["optional",{"_index":32,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["ordered",{"_index":314,"title":{},"body":{"classes/Str.html":{}}}],["otherwise",{"_index":451,"title":{},"body":{"license.html":{}}}],["out",{"_index":453,"title":{},"body":{"license.html":{}}}],["output",{"_index":348,"title":{},"body":{"classes/Str.html":{}}}],["output.substr(0",{"_index":351,"title":{},"body":{"classes/Str.html":{}}}],["overview",{"_index":457,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":375,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":70,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["particular",{"_index":437,"title":{},"body":{"license.html":{}}}],["permission",{"_index":392,"title":{},"body":{"license.html":{}}}],["permit",{"_index":416,"title":{},"body":{"license.html":{}}}],["person",{"_index":397,"title":{},"body":{"license.html":{}}}],["persons",{"_index":417,"title":{},"body":{"license.html":{}}}],["point",{"_index":153,"title":{},"body":{"classes/Rnd.html":{}}}],["portions",{"_index":427,"title":{},"body":{"license.html":{}}}],["processing",{"_index":313,"title":{},"body":{"classes/Str.html":{},"index.html":{}}}],["promise",{"_index":98,"title":{},"body":{"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{}}}],["promise(promisefunc",{"_index":140,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["promisefunc",{"_index":119,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["provided",{"_index":428,"title":{},"body":{"license.html":{}}}],["provider",{"_index":138,"title":{},"body":{"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{}}}],["provides",{"_index":65,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"index.html":{}}}],["public",{"_index":71,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["publish",{"_index":410,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":438,"title":{},"body":{"license.html":{}}}],["qty",{"_index":157,"title":{},"body":{"classes/Rnd.html":{}}}],["r",{"_index":307,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["r\\n",{"_index":306,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":94,"title":{},"body":{"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{}}}],["randombytes",{"_index":100,"title":{},"body":{"classes/RandomBytesProvider.html":{},"miscellaneous/variables.html":{}}}],["randombytes(size",{"_index":133,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["randombytesprovider",{"_index":88,"title":{"classes/RandomBytesProvider.html":{}},"body":{"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"coverage.html":{}}}],["randombytesprovider.nextbytes(qty",{"_index":177,"title":{},"body":{"classes/Rnd.html":{}}}],["randombytesprovider.nextbytesasync(qty",{"_index":182,"title":{},"body":{"classes/Rnd.html":{}}}],["range",{"_index":15,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{}}}],["range(size",{"_index":48,"title":{},"body":{"classes/Arr.html":{}}}],["reason",{"_index":123,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["regex",{"_index":290,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["regexp",{"_index":276,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["regexp(term",{"_index":341,"title":{},"body":{"classes/Str.html":{}}}],["regular",{"_index":270,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":122,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["reject('no",{"_index":137,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["reject(err",{"_index":132,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["resolve",{"_index":120,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["resolve(arr",{"_index":129,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["resolve(new",{"_index":135,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["resolves",{"_index":99,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["rest",{"_index":205,"title":{},"body":{"classes/Str.html":{}}}],["restriction",{"_index":404,"title":{},"body":{"license.html":{}}}],["result",{"_index":79,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["result.filter(c",{"_index":83,"title":{},"body":{"classes/Arr.html":{}}}],["result.splice(result.length",{"_index":339,"title":{},"body":{"classes/Str.html":{}}}],["results",{"_index":87,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":37,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["returned",{"_index":167,"title":{},"body":{"classes/Rnd.html":{}}}],["returns",{"_index":33,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["rights",{"_index":407,"title":{},"body":{"license.html":{}}}],["rnd",{"_index":114,"title":{"classes/Rnd.html":{}},"body":{"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"coverage.html":{}}}],["rnd.nextfloat(qty",{"_index":184,"title":{},"body":{"classes/Rnd.html":{}}}],["rnd.nextfloatasync(qty",{"_index":186,"title":{},"body":{"classes/Rnd.html":{}}}],["routes",{"_index":464,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["sell",{"_index":414,"title":{},"body":{"license.html":{}}}],["set",{"_index":66,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":424,"title":{},"body":{"license.html":{}}}],["size",{"_index":56,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{}}}],["software",{"_index":399,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["source](https://www.oreilly.com/library/view/regular",{"_index":292,"title":{},"body":{"classes/Str.html":{}}}],["space",{"_index":227,"title":{},"body":{"classes/Str.html":{}}}],["specified",{"_index":39,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["splitlines",{"_index":195,"title":{},"body":{"classes/Str.html":{}}}],["splitlines(str",{"_index":232,"title":{},"body":{"classes/Str.html":{}}}],["splitted",{"_index":323,"title":{},"body":{"classes/Str.html":{}}}],["splitted.length",{"_index":324,"title":{},"body":{"classes/Str.html":{}}}],["splitted[0",{"_index":328,"title":{},"body":{"classes/Str.html":{}}}],["splitted[0].charat(0",{"_index":326,"title":{},"body":{"classes/Str.html":{}}}],["splitted[0].charat(splitted[0].length",{"_index":327,"title":{},"body":{"classes/Str.html":{}}}],["splitted[0].length",{"_index":330,"title":{},"body":{"classes/Str.html":{}}}],["splitted[0].slice(1",{"_index":329,"title":{},"body":{"classes/Str.html":{}}}],["start",{"_index":50,"title":{},"body":{"classes/Arr.html":{}}}],["started",{"_index":382,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":10,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{}}}],["str",{"_index":62,"title":{"classes/Str.html":{}},"body":{"classes/Arr.html":{},"classes/Str.html":{},"coverage.html":{},"index.html":{}}}],["str.charat(0).touppercase().concat(str.slice(1",{"_index":335,"title":{},"body":{"classes/Str.html":{}}}],["str.empty",{"_index":334,"title":{},"body":{"classes/Str.html":{}}}],["str.isnullorempty(str",{"_index":81,"title":{},"body":{"classes/Arr.html":{}}}],["str.isnullorwhitespace(result[result.length",{"_index":338,"title":{},"body":{"classes/Str.html":{}}}],["str.isnullorwhitespace(str",{"_index":318,"title":{},"body":{"classes/Str.html":{}}}],["str.length",{"_index":316,"title":{},"body":{"classes/Str.html":{}}}],["str.matchall(termregex",{"_index":343,"title":{},"body":{"classes/Str.html":{}}}],["str.replace(nl",{"_index":336,"title":{},"body":{"classes/Str.html":{}}}],["str.split",{"_index":82,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["str.split('\\n",{"_index":337,"title":{},"body":{"classes/Str.html":{}}}],["str.tolowercase",{"_index":320,"title":{},"body":{"classes/Str.html":{}}}],["str.touppercase",{"_index":319,"title":{},"body":{"classes/Str.html":{}}}],["str.trim().length",{"_index":317,"title":{},"body":{"classes/Str.html":{}}}],["str.trim().tolowercase",{"_index":322,"title":{},"body":{"classes/Str.html":{}}}],["str.wrapinhtmltag(text",{"_index":262,"title":{},"body":{"classes/Str.html":{}}}],["string",{"_index":59,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["stringtochararray",{"_index":16,"title":{},"body":{"classes/Arr.html":{}}}],["stringtochararray(str",{"_index":58,"title":{},"body":{"classes/Arr.html":{}}}],["strong",{"_index":175,"title":{},"body":{"classes/Rnd.html":{}}}],["subject",{"_index":419,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":412,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":426,"title":{},"body":{"license.html":{}}}],["swapcase",{"_index":196,"title":{},"body":{"classes/Str.html":{}}}],["swapcase(str",{"_index":238,"title":{},"body":{"classes/Str.html":{}}}],["system",{"_index":139,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["t",{"_index":36,"title":{},"body":{"classes/Arr.html":{}}}],["table",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":252,"title":{},"body":{"classes/Str.html":{}}}],["tag.length",{"_index":345,"title":{},"body":{"classes/Str.html":{}}}],["tagclasses",{"_index":247,"title":{},"body":{"classes/Str.html":{}}}],["taglength",{"_index":344,"title":{},"body":{"classes/Str.html":{}}}],["tagname",{"_index":246,"title":{},"body":{"classes/Str.html":{}}}],["tagname.length",{"_index":347,"title":{},"body":{"classes/Str.html":{}}}],["tag}${match[0",{"_index":354,"title":{},"body":{"classes/Str.html":{}}}],["taken",{"_index":277,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":245,"title":{},"body":{"classes/Str.html":{}}}],["termregex",{"_index":340,"title":{},"body":{"classes/Str.html":{}}}],["texas",{"_index":259,"title":{},"body":{"classes/Str.html":{}}}],["text",{"_index":249,"title":{},"body":{"classes/Str.html":{},"index.html":{}}}],["throw",{"_index":142,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["toolbox",{"_index":385,"title":{},"body":{"index.html":{}}}],["tort",{"_index":450,"title":{},"body":{"license.html":{}}}],["true",{"_index":43,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["try",{"_index":125,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["tslib",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":109,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":106,"title":{},"body":{"classes/RandomBytesProvider.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":255,"title":{},"body":{"classes/Str.html":{}}}],["uint8array",{"_index":18,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{}}}],["uint8array(buf",{"_index":136,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["uint8array(randombytes(size",{"_index":141,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["uint8array(size",{"_index":127,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["undefined",{"_index":72,"title":{},"body":{"classes/Arr.html":{},"classes/Str.html":{}}}],["unknown",{"_index":124,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["upper",{"_index":169,"title":{},"body":{"classes/Rnd.html":{}}}],["uppercase",{"_index":222,"title":{},"body":{"classes/Str.html":{}}}],["use",{"_index":115,"title":{},"body":{"classes/RandomBytesProvider.html":{},"license.html":{}}}],["usually",{"_index":110,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["utilized",{"_index":111,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["valid",{"_index":210,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":55,"title":{},"body":{"classes/Arr.html":{},"classes/RandomBytesProvider.html":{},"classes/Rnd.html":{},"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":176,"title":{},"body":{"classes/Rnd.html":{}}}],["variable",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":460,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versa",{"_index":243,"title":{},"body":{"classes/Str.html":{}}}],["vice",{"_index":242,"title":{},"body":{"classes/Str.html":{}}}],["void",{"_index":121,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["warranties",{"_index":434,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":429,"title":{},"body":{"license.html":{}}}],["whether",{"_index":447,"title":{},"body":{"license.html":{}}}],["white",{"_index":226,"title":{},"body":{"classes/Str.html":{}}}],["window",{"_index":103,"title":{},"body":{"classes/RandomBytesProvider.html":{},"miscellaneous/variables.html":{}}}],["window.crypto",{"_index":104,"title":{},"body":{"classes/RandomBytesProvider.html":{},"miscellaneous/variables.html":{}}}],["window.crypto.getrandomvalues",{"_index":105,"title":{},"body":{"classes/RandomBytesProvider.html":{},"miscellaneous/variables.html":{}}}],["window.crypto.getrandomvalues(arr",{"_index":128,"title":{},"body":{"classes/RandomBytesProvider.html":{}}}],["within",{"_index":25,"title":{},"body":{"classes/Arr.html":{},"classes/Rnd.html":{}}}],["without",{"_index":403,"title":{},"body":{"license.html":{}}}],["wrapinhtmltag",{"_index":197,"title":{},"body":{"classes/Str.html":{}}}],["wrapinhtmltag(str",{"_index":244,"title":{},"body":{"classes/Str.html":{}}}],["wrapped",{"_index":250,"title":{},"body":{"classes/Str.html":{}}}],["wrote",{"_index":256,"title":{},"body":{"classes/Str.html":{}}}],["z0",{"_index":283,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["z]{2",{"_index":304,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}],["za",{"_index":282,"title":{},"body":{"classes/Str.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Arr.html":{"url":"classes/Arr.html","title":"class - Arr","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Arr\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/toolbox/src/lib/arr/arr.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                bytesToFloat\n                            \n                            \n                                    Static\n                                first\n                            \n                            \n                                    Static\n                                isNullOrEmpty\n                            \n                            \n                                    Static\n                                last\n                            \n                            \n                                    Static\n                                range\n                            \n                            \n                                    Static\n                                stringToCharArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            bytesToFloat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bytesToFloat(bytes: Uint8Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/arr/arr.ts:69\n                \n            \n\n\n            \n                \n                    Convert array of bytes into array of floats within range [0.0, 1.0]\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bytes\n                                    \n                                                Uint8Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            first\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    first(arr: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/arr/arr.ts:28\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Return the first element of a specified array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isNullOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNullOrEmpty(arr: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/arr/arr.ts:20\n                \n            \n\n\n            \n                \n                    Return true if a specified array is null or empty.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            last\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    last(arr: Array)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/arr/arr.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Return the last element of a specified array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            range\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    range(size: number, start: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/arr/arr.ts:44\n                \n            \n\n\n            \n                \n                    Return array filled by range of integers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    start\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            stringToCharArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stringToCharArray(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/arr/arr.ts:56\n                \n            \n\n\n            \n                \n                    Convert string into array of chars\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Str } from '../str';\n\n/**\n * @description\n * Provides a set of helper methods for arrays.\n */\nexport class Arr {\n\n  /**\n   * Return `true` if a specified array is null or empty.\n   * @param arr\n   */\n  public static isNullOrEmpty(arr: Array): boolean {\n    return arr === undefined || arr === null || arr.length === 0\n  }\n\n  /**\n   * Return the first element of a specified array.\n   * @param array\n   */\n  public static first(arr: Array): T | null {\n    return Arr.isNullOrEmpty(arr) ? null : arr[0];\n  }\n\n  /**\n   * Return the last element of a specified array.\n   * @param array\n   */\n  public static last(arr: Array): T | null {\n    return Arr.isNullOrEmpty(arr) ? null : arr[arr.length - 1];\n  }\n\n  /**\n   * Return array filled by range of integers\n   * @param size\n   */\n  public static range(size: number, start = 0): Array {\n    const result = [];\n    for(let i = start; i  {\n    if (Str.isNullOrEmpty(str)) {\n      return [];\n    }\n    let result: string[] = str.split('');\n    result = result.filter(c => c !== null && c !== undefined && c.length > 0);\n    return result;\n  }\n\n  /**\n   * Convert array of bytes into array of floats within range [0.0, 1.0]\n   * @param bytes\n   */\n  public static bytesToFloat(bytes: Uint8Array): Array {\n    const result = [];\n    for(let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RandomBytesProvider.html":{"url":"classes/RandomBytesProvider.html","title":"class - RandomBytesProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RandomBytesProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/toolbox/src/lib/random/provider.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                nextBytes\n                            \n                            \n                                    Static\n                                nextBytesAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            nextBytes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextBytes(size: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/random/provider.ts:58\n                \n            \n\n\n            \n                \n                    Return array of random bytes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        Number of bytes to generate\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Uint8Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            nextBytesAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextBytesAsync(size: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/random/provider.ts:27\n                \n            \n\n\n            \n                \n                    Return promise that resolves to array of random bytes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        Number of bytes to generate\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { randomBytes } from 'crypto';\n\nconst isBrowser = () =>\n  window && window.crypto && window.crypto.getRandomValues && typeof window.crypto.getRandomValues === 'function';\n\nconst isNodejs = (): boolean => randomBytes && typeof randomBytes === 'function';\n\n/**\n * @description\n * Provides two methods that return array of random bytes.\n * Usually this class utilized by higher level `Rnd` class.\n * However, you can use it directly if you need random bytes\n * collection.\n */\nexport class RandomBytesProvider {\n  /**\n   * Return promise that resolves to array of random bytes.\n   * @param size Number of bytes to generate\n   */\n  public static nextBytesAsync(size = 1): Promise {\n    let promiseFunc: (resolve: (value: Uint8Array) => void, reject: (reason: unknown) => void) => void;\n    if (isBrowser()) {\n      promiseFunc = (resolve, reject) => {\n        try {\n          const arr = new Uint8Array(size);\n          window.crypto.getRandomValues(arr);\n          resolve(arr);\n        } catch (err) {\n          reject(err);\n        }\n      };\n    } else if (isNodejs()) {\n      promiseFunc = (resolve, reject) => {\n        randomBytes(size, (err, buf) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(new Uint8Array(buf));\n        });\n      }\n    } else {\n      promiseFunc = (resolve, reject) => reject('No crypto provider in the system');\n    }\n    return new Promise(promiseFunc);\n  };\n\n  /**\n   * Return array of random bytes.\n   * @param size Number of bytes to generate\n   */\n  public static nextBytes(size = 1): Uint8Array {\n    if (isBrowser()) {\n        const arr = new Uint8Array(size);\n        return window.crypto.getRandomValues(arr);\n    } else if (isNodejs()) {\n      return new Uint8Array(randomBytes(size));\n    } else {\n      throw new Error('No crypto provider');\n    }\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rnd.html":{"url":"classes/Rnd.html","title":"class - Rnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/toolbox/src/lib/random/rnd.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                nextFloat\n                            \n                            \n                                    Static\n                                    Async\n                                nextFloatAsync\n                            \n                            \n                                    Static\n                                nextInt\n                            \n                            \n                                    Static\n                                    Async\n                                nextIntAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            nextFloat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextFloat(qty: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/random/rnd.ts:21\n                \n            \n\n\n            \n                \n                    Return a random floating-point number that is greater than or equal to 0.0, and less than 1.0.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    qty\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        number of results to return\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            nextFloatAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextFloatAsync(qty: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/random/rnd.ts:30\n                \n            \n\n\n            \n                \n                    Return async a random floating-point number that is greater than or equal to 0.0, and less than 1.0.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    qty\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        number of results to return\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            nextInt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextInt(min: number, max: number, qty: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/random/rnd.ts:43\n                \n            \n\n\n            \n                \n                    Return a random integer that is within a specified range.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        lower bound of the random number returned\n\n                                    \n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                    \n                                        upper bound of the random number returned. max must be greater than or equal to min\n\n                                    \n                                \n                                \n                                    qty\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        number of results to return\nWith no parameters it generates one integer within the range [0, 10]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            nextIntAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextIntAsync(min: number, max: number, qty: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/random/rnd.ts:65\n                \n            \n\n\n            \n                \n                    Return async a random integer that is within a specified range.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        lower bound of the random number returned\n\n                                    \n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                    \n                                        upper bound of the random number returned. max must be greater than or equal to min\n\n                                    \n                                \n                                \n                                    qty\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        number of results to return\nWith no parameters it generates one integer within the range [0, 10]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RandomBytesProvider } from './provider';\nimport { Arr } from '../arr';\n\n/**\n * @description\n * Provides a set of helper methods to generate cryptographically\n * strong random values.\n */\nexport class Rnd {\n  /**\n   * Return a random floating-point number that is greater than or equal to 0.0, and less than 1.0.\n   * @param qty number of results to return\n   */\n  public static nextFloat(qty = 1): number | number[] {\n    const bytes = RandomBytesProvider.nextBytes(qty);\n    return qty === 1 ? bytes[0] / 256 : Arr.bytesToFloat(bytes);\n  }\n\n  /**\n   * Return async a random floating-point number that is greater than or equal to 0.0, and less than 1.0.\n   * @param qty number of results to return\n   */\n  public static async nextFloatAsync(qty = 1): Promise {\n    const bytes = await RandomBytesProvider.nextBytesAsync(qty);\n    return qty === 1 ? bytes[0] / 256 : Arr.bytesToFloat(bytes);\n  }\n\n  /**\n   * Return a random integer that is within a specified range.\n   * @param min lower bound of the random number returned\n   * @param max upper bound of the random number returned. `max` must be greater than or equal to `min`\n   * @param qty number of results to return\n   *\n   * With no parameters it generates one integer within the range [0, 10]\n   */\n  public static nextInt(min = 0, max = 10, qty = 1): number | number[] {\n    let floatValue = Rnd.nextFloat(qty);\n    if (qty === 1) {\n      return Math.round(floatValue as number * (max - min) + min);\n    } else {\n      floatValue = floatValue as number[];\n      const result = [];\n      for (let i = 0; i  {\n    let floatValue = await Rnd.nextFloatAsync(qty);\n    if (qty === 1) {\n      return Math.round(floatValue as number * (max - min) + min);\n    } else {\n      floatValue = floatValue as number[];\n      const result = [];\n      for (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Str.html":{"url":"classes/Str.html","title":"class - Str","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Str\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/toolbox/src/lib/str/str.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                capitalize\n                            \n                            \n                                    Static\n                                isDomainName\n                            \n                            \n                                    Static\n                                isEmail\n                            \n                            \n                                    Static\n                                isIp\n                            \n                            \n                                    Static\n                                isLower\n                            \n                            \n                                    Static\n                                isNullOrEmpty\n                            \n                            \n                                    Static\n                                isNullOrWhiteSpace\n                            \n                            \n                                    Static\n                                isUpper\n                            \n                            \n                                    Static\n                                splitLines\n                            \n                            \n                                    Static\n                                swapCase\n                            \n                            \n                                    Static\n                                wrapInHtmlTag\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    empty\n                                \n                                \n                                    englishLettersOrdered\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            capitalize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    capitalize(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:123\n                \n            \n\n\n            \n                \n                    Return a copy of the string with its first character capitalized and the rest lowercased.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isDomainName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDomainName(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:114\n                \n            \n\n\n            \n                \n                    Return true if string looks like a valid domain name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmail(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:87\n                \n            \n\n\n            \n                \n                    Return true if string is a valid email address\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isIp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isIp(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:106\n                \n            \n\n\n            \n                \n                    Return true if string is a valid IP address\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isLower\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLower(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:79\n                \n            \n\n\n            \n                \n                    Return true if all characters in the string are uppercase\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isNullOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNullOrEmpty(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:55\n                \n            \n\n\n            \n                \n                    Return true if a specified string is null, empty, or consists only of white-space characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isNullOrWhiteSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNullOrWhiteSpace(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:62\n                \n            \n\n\n            \n                \n                    Return true if a specified string is null, empty, or consists only of white-space characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isUpper\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUpper(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:71\n                \n            \n\n\n            \n                \n                    Return true if all characters in the string are uppercase\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            splitLines\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitLines(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:146\n                \n            \n\n\n            \n                \n                    Return an array of the lines in the string, breaking at line boundaries.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            swapCase\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    swapCase(str: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:131\n                \n            \n\n\n            \n                \n                    Return a copy of the string with uppercase characters converted to lowercase and vice versa.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            wrapInHtmlTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wrapInHtmlTag(str: string, term: string, tagName: string, tagClasses: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/toolbox/src/lib/str/str.ts:172\n                \n            \n\n\n            \n                \n                    Return source text with \"term\" wrapped by specified HTML tag.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        source text\n\n                                    \n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        text that must be wrapped\n\n                                    \n                                \n                                \n                                    tagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        name of HTML tag\n\n                                    \n                                \n                                \n                                    tagClasses\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        (optional) list of css classes of HTML tag\nExample:\n```typescript\n\nconst text = who also wrote the majority opinion in the Texas Case, wrote the majority opinion here;\nconst result = Str.wrapInHtmlTag(text, 'majority', 'em', ['bold', 'italic']);\nThe result will be:\n\n\nwho also wrote the majority opinion in the Texas Case, wrote the majority opinion here\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        empty\n                    \n                \n\n                \n                    \n                        getempty()\n                    \n                \n                            \n                                \n                                    Defined in libs/toolbox/src/lib/str/str.ts:44\n                                \n                            \n                    \n                        \n                                Empty string\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        englishLettersOrdered\n                    \n                \n\n                \n                    \n                        getenglishLettersOrdered()\n                    \n                \n                            \n                                \n                                    Defined in libs/toolbox/src/lib/str/str.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Arr } from '../arr';\n\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * This regexp was taken from\n * [Angular source code](https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts)\n *\n */\nconst EMAIL_REGEXP =\n    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\n/**\n * Accurate regex to check for an IP address\n *\n * [Source](https://www.oreilly.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html)\n */\nconst IP_REGEXP = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n\nconst DOMAIN_NAME_REGEXP = /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/;\n\nconst NEW_LINE_BOUNDARIES: string[] = ['\\r\\n', '\\r', '\\n'];\n\n/**\n * Set of English alphbet as a string\n */\nexport const ENGLISH_LETTERS_LOWERCASE = 'abcdefghijklmnopqrstuvwxyz';\n\n/**\n * @description\n * Provides a set of helper methods for text processing.\n */\nexport class Str {\n  /**\n   * Empty string\n   */\n  public static get empty(): string { return ''; }\n\n  /**\n   * @description\n   * Ordered set of lowercase English letters\n   */\n  public static get englishLettersOrdered(): string { return ENGLISH_LETTERS_LOWERCASE; }\n\n  /**\n   * Return `true` if a specified string is null, empty, or consists only of white-space characters.\n   */\n  public static isNullOrEmpty(str: string): boolean {\n    return str === undefined || str === null || str.length === 0;\n  }\n\n  /**\n   * Return `true` if a specified string is null, empty, or consists only of white-space characters.\n   */\n  public static isNullOrWhiteSpace(str: string): boolean {\n    return str === undefined || str === null ||\n      str.length === 0 || str.trim().length === 0;\n  }\n\n  /**\n   * Return `true` if all characters in the string are uppercase\n   * @param str\n   */\n  public static isUpper(str: string): boolean {\n    return !Str.isNullOrWhiteSpace(str) && str === str.toUpperCase();\n  }\n\n  /**\n   * Return `true` if all characters in the string are uppercase\n   * @param str\n   */\n  public static isLower(str: string): boolean {\n    return !Str.isNullOrWhiteSpace(str) && str === str.toLowerCase();\n  }\n\n  /**\n   * Return `true` if string is a valid email address\n   * @param str\n   */\n  public static isEmail(str: string): boolean {\n    if (Str.isNullOrWhiteSpace(str)) {\n      return false;\n    }\n    str = str.trim().toLowerCase();\n    const splitted = str.split('@');\n    if (splitted.length !== 2) {\n      return false;\n    }\n    if (splitted[0].charAt(0) === '\"' && splitted[0].charAt(splitted[0].length - 1) === '\"') {\n      splitted[0] = splitted[0].slice(1, splitted[0].length - 2);\n    }\n    return EMAIL_REGEXP.test(splitted.join('@'));\n  }\n\n  /**\n   * Return `true` if string is a valid IP address\n   * @param str\n   */\n  public static isIp(str: string): boolean {\n    return !Str.isNullOrWhiteSpace(str) && IP_REGEXP.test(str);\n  }\n\n  /**\n   * Return `true` if string looks like a valid domain name\n   * @param str\n   */\n  public static isDomainName(str: string): boolean {\n    return !Str.isNullOrWhiteSpace(str) && DOMAIN_NAME_REGEXP.test(str);\n  }\n\n  /**\n   * Return a copy of the string with its first character capitalized and the rest lowercased.\n   *\n   * @param str\n   */\n  public static capitalize(str: string): string {\n    return Str.isNullOrWhiteSpace(str) ? Str.empty : str.charAt(0).toUpperCase().concat(str.slice(1));\n  }\n\n  /**\n   * Return a copy of the string with uppercase characters converted to lowercase and vice versa.\n   * @param str\n   */\n  public static swapCase(str: string): string {\n    if (Str.isNullOrWhiteSpace(str)) {\n      return Str.empty;\n    }\n    let result = Str.empty;\n    for(let i = 0; i  str = str.replace(nl, '\\n'));\n    const result = str.split('\\n');\n    if (Str.isNullOrWhiteSpace(result[result.length - 1])) {\n      result.splice(result.length - 1, 1);\n    }\n    return result;\n  }\n\n  /**\n   * Return source text with \"term\" wrapped by specified HTML tag.\n   *\n   * @param str source text\n   * @param term text that must be wrapped\n   * @param tagName name of HTML tag\n   * @param tagClasses (optional) list of css classes of HTML tag\n   *\n   * Example:\n   * ```typescript\n   * const text = `who also wrote the majority opinion in the Texas Case, wrote the majority opinion here`;\n   * const result = Str.wrapInHtmlTag(text, 'majority', 'em', ['bold', 'italic']);\n   * ```\n   * The result will be:\n   *\n   * `who also wrote the majority opinion in the Texas Case, wrote the majority opinion here`\n   */\n  public static wrapInHtmlTag(str: string, term: string, tagName: string, tagClasses: string[] = null): string {\n    const termRegex = new RegExp(term, 'ig');\n    const matches = str.matchAll(termRegex);\n    let tag = ``;\n    const tagLength = tag.length + 3 + tagName.length;\n    let output = '';\n    for(const match of matches) {\n        output = output ? output.substr(0, match.index + tagLength) : match.input.substr(0, match.index);\n        output += `${tag}${match[0]}`;\n        output += match.input.substr(match.index + match[0].length);\n    }\n    return output || str;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/toolbox/src/lib/arr/arr.ts\n            \n            class\n            Arr\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/random/provider.ts\n            \n            class\n            RandomBytesProvider\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/random/provider.ts\n            \n            variable\n            isBrowser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/random/provider.ts\n            \n            variable\n            isNodejs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/random/rnd.ts\n            \n            class\n            Rnd\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/str/str.ts\n            \n            class\n            Str\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/str/str.ts\n            \n            variable\n            DOMAIN_NAME_REGEXP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/str/str.ts\n            \n            variable\n            EMAIL_REGEXP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/str/str.ts\n            \n            variable\n            ENGLISH_LETTERS_LOWERCASE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/str/str.ts\n            \n            variable\n            IP_REGEXP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/toolbox/src/lib/str/str.ts\n            \n            variable\n            NEW_LINE_BOUNDARIES\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            mongodb : ^3.5.9\n        \n            tslib : ^1.10.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAwai\nSet of libraries.\nToolbox\n\nStr - Provides a set of helper methods for text processing.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Arthur Groupp\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DOMAIN_NAME_REGEXP   (libs/.../str.ts)\n                        \n                        \n                            EMAIL_REGEXP   (libs/.../str.ts)\n                        \n                        \n                            ENGLISH_LETTERS_LOWERCASE   (libs/.../str.ts)\n                        \n                        \n                            IP_REGEXP   (libs/.../str.ts)\n                        \n                        \n                            isBrowser   (libs/.../provider.ts)\n                        \n                        \n                            isNodejs   (libs/.../provider.ts)\n                        \n                        \n                            NEW_LINE_BOUNDARIES   (libs/.../str.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/toolbox/src/lib/str/str.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DOMAIN_NAME_REGEXP\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL_REGEXP\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n                        \n                    \n\n                \n                    \n                        A regular expression that matches valid e-mail addresses.\nThis regexp was taken from\nAngular source code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ENGLISH_LETTERS_LOWERCASE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'abcdefghijklmnopqrstuvwxyz'\n                        \n                    \n\n                \n                    \n                        Set of English alphbet as a string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IP_REGEXP\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n                        \n                    \n\n                \n                    \n                        Accurate regex to check for an IP address\nSource\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NEW_LINE_BOUNDARIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['\\r\\n', '\\r', '\\n']\n                        \n                    \n\n\n            \n        \n\n    libs/toolbox/src/lib/random/provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isBrowser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  window && window.crypto && window.crypto.getRandomValues && typeof window.crypto.getRandomValues === 'function'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNodejs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): boolean => randomBytes && typeof randomBytes === 'function'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
